FROM golang:1.23-alpine AS build
ARG IMPORT_ZSCALER_CERT=false

COPY zscaler-root-ca.crt /tmp/zscaler-root-ca.crt

ENV CGO_ENABLED=0

RUN if [ "$IMPORT_ZSCALER_CERT" = "true" ]; then \
      cp /tmp/zscaler-root-ca.crt /usr/local/share/ca-certificates/zscaler-root-ca.crt && \
      update-ca-certificates \
    else \
      echo "Skipping Zscaler cert install"; \
    fi

RUN apk update && apk add bash ca-certificates dos2unix && update-ca-certificates 2>/dev/null

WORKDIR /app

COPY . .
# COPY --from=npm /app/dist /app/agent_poc/dist
RUN mkdir -p /app/agent_poc/dist
RUN echo "" > /app/agent_poc/dist/index.html

RUN go mod download
RUN go build -o /agent_poc

WORKDIR /app/policies/brocade

RUN chmod +x build.sh
RUN dos2unix ./build.sh
RUN bash ./build.sh 1.0.0
RUN bash ./build.sh 1.0.1
RUN bash ./build.sh 1.0.2
RUN bash ./build.sh 1.0.3

# final stage
FROM alpine 
WORKDIR /
COPY --from=build /agent_poc /agent_poc
COPY --from=build /app/data /data
COPY --from=build /app/policies/brocade/ /data/policies
EXPOSE 8888
ENTRYPOINT ["/agent_poc"]